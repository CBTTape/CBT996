./ ADD NAME=$$LIB    0101-19004-19004-0952-00001-00001-00000-APLKS   12
     USERID().ASUTIL.CNTL
./ ADD NAME=$DIR     0105-22319-23031-1006-00046-00001-00000-APLKS   20
*   CBT#nnn FILE996      Aritecture Services Misc             LKS

 EXECJCL
 --------
 ASMBCL        assemble & link a program
 ASMPKG        assemble & link the String Package
 ASMREST       assemble & link all of the misc programs
 ASMSTR        assemble & link each program in the String Package
 ASTIVP01      IVP test dump AS control blocks
               IVP test query environment information
               IVP test AS LE messages
               IVP test for date/data wrangling macro's
               IVP test for chase control blocks
 ASTIVP02      IVP test for String Package
 ASTIVP03      IVP test copy PARM= statement to PS file
 ASTIVP04      IVP test block size analysis for PS & VSAM
 ASTIVP05      IVP test query file attributes
 ASTIVP06      IVP test LE & C/C++ function(s) & callable services
 ASTIVP07      IVP test HeapSort(s) & Search(s)
 ASTIVP08      IVP test Array dope vector creation & use
 ASTIVP09      IVP test load module analysis program(s)
 COBALL <-+    compile & link all AS COBOL programs
          +----(use to compile ASUP2DSB,
                required for assembly JCL to work)
 COBBCL        compile & link a single COBOL program
 SSLEANAL

 Instructions to compile and assembly all programs and/or package
 1. run COBALL
 2. run ASMREST
 3. run ASMSTR
 4. run ASMPKG (optional)
 5. run ASMBCL to compile SSLEANAL

 Instructions to run Instalation Verification Process (IVP)
 1. run ASTIVP01    ...
 2. run ASTIVP02    IVP test for String Package
                    runs both the individual String sub-pgms
                    and the combined String package
 3. run ASTIVP03    IVP test copy PARM= statement to PS file
 4. run ASTIVP04    IVP test block size analysis for PS & VSAM
 5. run ASTIVP05    IVP test query file attributes
 6. run ASTIVP06    IVP test LE & C/C++ function(s) & callable svcs
 7. run ASTIVP07    IVP test HeapSort(s) & Search(s)
 8. run ASTIVP08    IVP test Array dope vector creation & use
 9. run ASTIVP09    IVP test load module analysis program(s)
./ ADD NAME=ASMBCL   0147-17081-23031-0949-00092-00092-00000-APLKS   46
//APLKS    JOB ,'A/L BATCH PGM',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* CHANGE '%mbr' 'XXXXXXXX' ALL
//* SET VARIABLE NAMES
//  SET SRCMBR=%mbr
//  SET SRCLIB=APLKS.ASUTIL.ASM
//  SET SRCDSN=&SRCLIB(&SRCMBR)
//  SET LNKMBR=&SRCMBR
//  SET LNKLIB=APLKS.ASUTIL.LOADLIB
//  SET LOADLIB=APLKS.ASUTIL.LOADLIB
//  SET WORK=SYSDA
//*
//ASMBLR   PROC ASMPGM=ASMA90,
//             ASMPARM='NODECK,OBJECT',
//             OUTC=*,
//             WORK=SYSDA
//*        DECK - OUTPUT SYSPUNCH
//*        OBJECT - OUTPUT SYSLIN
//*
//ASM      EXEC PGM=&ASMPGM,PARM='&ASMPARM'
//SYSIN    DD  DUMMY          /*SOURCE INPUT*/
//SYSPRINT DD  SYSOUT=&OUTC
//SYSLIB   DD  DUMMY          /*COPYLIB/MACLIB INPUT*/
//SYSPUNCH DD  DUMMY          /*CARD DECK OUTPUT*/
//SYSLIN   DD  DUMMY          /*OUTPUT FILE*/
//SYSADATA DD  DUMMY          /*ASSOCIATED DATA OUTPUT LRECL=1020*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT2   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT3   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//         PEND  END OF PROC ASMBLR
//*
//BINDER   PROC LNKPGM=IEWBLINK,
//             LNKPARM='MAP',
//             LNKLIB=,
//             LNKMBR=,
//             OUTC=*,
//             WORK=SYSDA
//*
//* DEFAULT    LNKPARM='CALL,LET,LIST,NOMAP,RES,NOREUS,NOXREF'
//*
//LNK      EXEC PGM=&LNKPGM,PARM='&LNKPARM'
//IEWPARMS DD  DUMMY           /*INPUT BINDER OPTS*/
//OBJLIB   DD  DUMMY           /*INPUT INCLUDE FILE*/
//SYSLIN   DD  DUMMY           /*INPUT FILE*/
//SYSPRINT DD  SYSOUT=&OUTC
//SYSLIB   DD  DUMMY           /*EXTERNAL REF INPUT*/
//SYSLMOD  DD  DISP=SHR,DSNAME=&LNKLIB(&LNKMBR)   /*CATALOG TO LIB*/
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//         PEND  END OF PROC BINDER
//*
//* RUN ASSEMBLER TO CREATE OBJECT
//STEP040  EXEC ASMBLR  ,PARM=(MAP,SYSPARM(LBLTRCE))
//ASM.SYSIN  DD  DISP=SHR,DSN=&SRCDSN
//ASM.SYSLIB DD  DISP=SHR,DSN=&SRCLIB
//           DD  DISP=SHR,DSN=SYS1.MACLIB
//           DD  DISP=SHR,DSN=SYS1.MODGEN
//           DD  DISP=SHR,DSN=CEE.SCEEMAC
//           DD  DISP=SHR,DSN=CEE.SCEESAMP
//           DD  DISP=SHR,DSN=SYS1.SHASMAC
//ASM.SYSLIN DD  DSN=&&LOADSET,    /*OUTPUT FILE*/
//             UNIT=&WORK,SPACE=(4000,(100,100)),
//             DISP=(,PASS)
//*
//* COPY PARM STMT TO SYSUT2
//STEP050  EXEC PGM=ASUP2DSB,
//  PARM=('\','    NAME &LNKMBR(R) \')
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//SYSUT2   DD  DSN=&&CTLCRD,
//             UNIT=&WORK,SPACE=(TRK,(01),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//             DISP=(NEW,PASS,DELETE)
//SYSOUT   DD  SYSOUT=*
//*
//  IF (STEP040.ASM.RC LT 8) THEN
//* LNK/BIND OBJECT(S)
//STEP060  EXEC BINDER,
//             LNKPARM='MAP',
//             LNKLIB=&LNKLIB,
//             LNKMBR=&LNKMBR
//LNK.IEWPARMS DD  DUMMY
//LNK.SYSLIN DD  DISP=(OLD,PASS),DSN=&&LOADSET
//           DD  DISP=(OLD,PASS),DSN=&&CTLCRD
/*
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//  ENDIF /*end of IF for STEP060*/
//*
//
./ ADD NAME=ASMPKG   0136-17017-23031-0842-00136-00081-00000-APLKS   52
//APLKS    JOB ,'A/L STRING PACKAGE',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//  EXPORT SYMLIST=CBT
//* SET VARIABLE NAMES
//  SET CBT=CB505996          CHANGE TO MATCH CBT RELEASE
//  SET SRCLIB=APLKS.ASUTIL.ASM
//  SET OBJLIB=APLKS.ASUTIL.OBJ1LIB
//  SET LNKLIB=APLKS.ASUTIL.LOADLIB
//  SET WORK=SYSDA
//*
//ASMBLR   PROC ASMPGM=ASMA90,
//             ASMPARM='DECK,NOOBJECT,SYSPARM(PKG)',
//             SRCLIB=&SRCLIB,
//             SRCMBR=,
//             OUTC=*,
//             WORK=SYSDA
//*        DECK - OUTPUT SYSPUNCH
//*        OBJECT - OUTPUT SYSLIN
//*
//ASM      EXEC PGM=&ASMPGM,PARM='&ASMPARM'
//SYSIN    DD  DISP=SHR,DSN=&SRCLIB(&SRCMBR) /*SOURCE INPUT*/
//SYSLIB   DD  DISP=SHR,DSN=&SRCLIB     /*COPYLIB/MACLIB INPUT*/
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=CEE.SCEEMAC
//         DD  DISP=SHR,DSN=CEE.SCEESAMP
//         DD  DISP=SHR,DSN=SYS1.SHASMAC
//*
//SYSPUNCH DD  DISP=SHR,DSN=&OBJLIB(&SRCMBR) /*OBJ DECK OUT*/
//SYSLIN   DD  DUMMY          /*OUTPUT FILE*/
//SYSADATA DD  DUMMY          /*ASSOCIATED DATA OUTPUT LRECL=1020*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT2   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT3   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//         PEND  END OF PROC ASMBLR
//*
//BINDER   PROC LNKPGM=IEWBLINK,
//             LNKPARM='MAP',
//             LNKLIB=&LNKLIB,
//             OUTC=*,
//             WORK=SYSDA
//*
//* DEFAULT    LNKPARM='CALL,LET,LIST,NOMAP,RES,NOREUS,NOXREF'
//*
//LNK      EXEC PGM=&LNKPGM,PARM='&LNKPARM'
//IEWPARMS DD  DUMMY          /*INPUT BINDER OPTS*/
//SYSLIN   DD  DUMMY          /*INPUT FILE*/
//OBJLIB   DD  DUMMY          /*INPUT INCLUDE FILE*/
//SYSLIB   DD  DUMMY          /*EXTERNAL REF INPUT*/
//*
//SYSLMOD  DD  DISP=SHR,DSN=&LNKLIB     /*CATALOG TO LIB*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//         PEND  END OF PROC BINDER
//*
//* DELETE OBJECT DATASET FOR ASSEMBLY OUTPUT
//STEP005  EXEC PGM=IEFBR14
//IFILE01  DD  DSN=&OBJLIB,
//             UNIT=&WORK,SPACE=(TRK,(1,1,1)),
//             DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3200),
//             DISP=(MOD,DELETE,DELETE)
//*
//* ALLOCATE OBJECT DATASET FOR ASSEMBLY OUTPUT
//STEP010  EXEC PGM=IEFBR14
//OFILE01  DD  DSN=&OBJLIB,
//             UNIT=&WORK,SPACE=(CYL,(5,5,30)),
//             DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3200),
//             DISP=(NEW,CATLG,DELETE)
//*
//* ASSEMBLE ALL MODULES
//APND     EXEC ASMBLR,SRCMBR=ASUDAPND  STRING APPEND
//BMPOS    EXEC ASMBLR,SRCMBR=ASUDBPOS  STRING 1ST POS BOYER-MOORE
//CNTR     EXEC ASMBLR,SRCMBR=ASUDCNTR  STRING CENTER
//DEDT     EXEC ASMBLR,SRCMBR=ASUDDEDT  STRING DE-EDIT
//FPOS     EXEC ASMBLR,SRCMBR=ASUDFPOS  STRING 1ST POS
//HHEX     EXEC ASMBLR,SRCMBR=ASUDHHEX  STRING HORIZONTAL|DUMP HEX
//LEFT     EXEC ASMBLR,SRCMBR=ASUDLEFT  STRING LEFT JUSTIFY
//LPOS     EXEC ASMBLR,SRCMBR=ASUDLPOS  STRING LAST POS
//RGHT     EXEC ASMBLR,SRCMBR=ASUDRGHT  STRING RIGHT JUSTIFY
//SCNT     EXEC ASMBLR,SRCMBR=ASUDSCNT  STRING COUNT
//SINS     EXEC ASMBLR,SRCMBR=ASUDSINS  STRING INSERT
//SSUB     EXEC ASMBLR,SRCMBR=ASUDSSUB  STRING SUB-STRING
//STRP     EXEC ASMBLR,SRCMBR=ASUDSTRP  STRING STRIP
//VHEX     EXEC ASMBLR,SRCMBR=ASUDVHEX  STRING VERTICAL HEX
//* GROUP ORDER MATTERS (COMPILE ASUDSCNT 1ST)
//JSTF     EXEC ASMBLR,SRCMBR=ASUDJSTF  STRING JUSTIFY
//SPCE     EXEC ASMBLR,SRCMBR=ASUDSPCE  STRING SPACE
//WDEL     EXEC ASMBLR,SRCMBR=ASUDWDEL  STRING WORD DELETE
//WPOS     EXEC ASMBLR,SRCMBR=ASUDWPOS  STRING WORD POS
//* GROUP ORDER MATTERS (COMPILE ASUDBPOS 1ST)
//SDEL     EXEC ASMBLR,SRCMBR=ASUDSDEL  STRING DELETE
//SREP     EXEC ASMBLR,SRCMBR=ASUDSREP  STRING REPLACE
//SVAR     EXEC ASMBLR,SRCMBR=ASUDSVAR  STRING VARIABLE
//* GROUP PACKAGE DRIVER
//CLASS    EXEC ASMBLR,SRCMBR=ASUSSVCB  STRING SERVICE MODULE
//*
//* LNK/BIND OBJECT(S)
//STEP040  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUSSVCB)            STRING SERVICE MODULE
    INCLUDE OBJLIB(ASUDAPND)            STRING APPEND
    INCLUDE OBJLIB(ASUDBPOS)            STRING 1ST POS BOYER-MOORE
    INCLUDE OBJLIB(ASUDCNTR)            STRING CENTER
    INCLUDE OBJLIB(ASUDDEDT)            STRING DE-EDIT
    INCLUDE OBJLIB(ASUDFPOS)            STRING 1ST POS
    INCLUDE OBJLIB(ASUDHHEX)            STRING HORIZONTAL HEX
    INCLUDE OBJLIB(ASUDJSTF)            STRING JUSTIFY
    INCLUDE OBJLIB(ASUDLEFT)            STRING LEFT
    INCLUDE OBJLIB(ASUDLPOS)            STRING LAST POS
    INCLUDE OBJLIB(ASUDRGHT)            STRING RIGHT JUSTIFY
    INCLUDE OBJLIB(ASUDSCNT)            STRING COUNT
    INCLUDE OBJLIB(ASUDSDEL)            STRING DELETE
    INCLUDE OBJLIB(ASUDSINS)            STRING INSERT
    INCLUDE OBJLIB(ASUDSPCE)            STRING SPACE
    INCLUDE OBJLIB(ASUDSREP)            STRING REPLACE
    INCLUDE OBJLIB(ASUDSSUB)            STRING SUB-STRING
    INCLUDE OBJLIB(ASUDSTRP)            STRING STRIP
    INCLUDE OBJLIB(ASUDSVAR)            STRING VARIABLE
    INCLUDE OBJLIB(ASUDVHEX)            STRING VERTICAL HEX
    INCLUDE OBJLIB(ASUDWDEL)            STRING WORD DELETE
    INCLUDE OBJLIB(ASUDWPOS)            STRING WORD POS
    SETSSI &CBT
    NAME ASUSSVCB(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//
./ ADD NAME=ASMREST  0113-21302-23031-1015-00115-00092-00000-APLKS   13
//APLKS    JOB ,'A/L BATCH REST',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET VARIABLE NAMES
//  SET SRCLIB=APLKS.ASUTIL.ASM
//  SET LNKLIB=APLKS.ASUTIL.LOADLIB
//  SET STEPLIB=APLKS.ASUTIL.LOADLIB
//  SET WORK=SYSDA
//*
//ASMCLK   PROC ASMPGM=ASMA90,
//             ASMPARM='NODECK,OBJECT',
//             SRCMBR=,
//             LNKPGM=IEWBLINK,
//             LNKPARM='MAP',
//             LNKMBR=,
//             OUTC=*,
//             WORK=&WORK
//*        DECK - OUTPUT SYSPUNCH
//*        OBJECT - OUTPUT SYSLIN
//*
//ASM      EXEC PGM=&ASMPGM,PARM='&ASMPARM'
//SYSIN    DD  DISP=SHR,DSN=&SRCLIB(&SRCMBR) /*SOURCE INPUT*/
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB      /*COPYLIB/MACLIB INPUT*/
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=CEE.SCEEMAC
//         DD  DISP=SHR,DSN=CEE.SCEESAMP
//         DD  DISP=SHR,DSN=SYS1.SHASMAC
//         DD  DISP=SHR,DSN=&SRCLIB
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT2   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT3   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//*
//SYSPUNCH DD  DUMMY                    /*CARD DECK OUTPUT*/
//SYSLIN   DD  DSN=&&LOADSET,           /*OUTPUT FILE*/
//             UNIT=&WORK,SPACE=(4000,(100,100)),
//             DISP=(,PASS)
//SYSADATA DD  DUMMY          /*ASSOCIATED DATA OUTPUT LRECL=1020*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//*
//* COPY BINDER STMT TO SYSUT2
//CPY      EXEC PGM=ASUP2DSB,COND=(4,LT),
//  PARM=('\','    NAME &LNKMBR(R) \')
//STEPLIB  DD  DISP=SHR,DSN=&STEPLIB
//SYSUT2   DD  DSN=&&CTLCRD,
//             UNIT=&WORK,SPACE=(TRK,(01),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//             DISP=(NEW,PASS,DELETE)
//*
//SYSOUT   DD  SYSOUT=*
//*
//LNK      EXEC PGM=&LNKPGM,COND=(4,LT),PARM='&LNKPARM'
//IEWPARMS DD  DUMMY           /*INPUT BINDER OPTS*/
//OBJLIB   DD  DUMMY           /*INPUT INCLUDE FILE*/
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=&&LOADSET    /*INPUT FILE*/
//         DD  DISP=(OLD,DELETE),DSN=&&CTLCRD
//SYSLIB   DD  DISP=SHR,DSN=CEE.SCEELKED     /*EXTERNAL REF INPUT*/
//         DD  DISP=SHR,DSN=&LNKLIB
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//*
//SYSLMOD  DD  DISP=SHR,DSN=&LNKLIB(&LNKMBR)   /*CATALOG TO LIB*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//*
//         PEND  END OF PROC ASMCLK
//*
//* ASSEMBLE ALL LOADABLE VECTORS
//TBL001   EXEC ASMCLK,SRCMBR=ASTCH2HH,LNKMBR=ASTCH2HH
//TBL002   EXEC ASMCLK,SRCMBR=ASTHH2CH,LNKMBR=ASTHH2CH
//TBL003   EXEC ASMCLK,SRCMBR=ASTLPIDB,LNKMBR=ASTLPIDB
//TBL004   EXEC ASMCLK,SRCMBR=ASTNTSPD,LNKMBR=ASTNTSPD
//TBL005   EXEC ASMCLK,SRCMBR=ASTNTSZD,LNKMBR=ASTNTSZD
//TBL006   EXEC ASMCLK,SRCMBR=ASTNTUCH,LNKMBR=ASTNTUCH
//TBL007   EXEC ASMCLK,SRCMBR=AST1COMP,LNKMBR=AST1COMP
//TBL008   EXEC ASMCLK,SRCMBR=ASUENU01,LNKMBR=ASUENU01
//TBL009   EXEC ASMCLK,SRCMBR=UASUMSGT,LNKMBR=UASUMSGT
//* ASSEMBLE ALL DATE ROUTINES
//DTE001   EXEC ASMCLK,SRCMBR=ASUB2JDB,LNKMBR=ASUB2JDB
//DTE002   EXEC ASMCLK,SRCMBR=ASUG2JDB,LNKMBR=ASUG2JDB
//DTE003   EXEC ASMCLK,SRCMBR=ASUJ2BDB,LNKMBR=ASUJ2BDB
//DTE004   EXEC ASMCLK,SRCMBR=ASUJ2GDB,LNKMBR=ASUJ2GDB
//DTE005   EXEC ASMCLK,SRCMBR=ASUJ2WDB,LNKMBR=ASUJ2WDB
//DTE006   EXEC ASMCLK,SRCMBR=ASUW2JDB,LNKMBR=ASUW2JDB
//* ASSEMBLE VECTOR PROCESSING ROUTINES
//VTR001   EXEC ASMCLK,SRCMBR=ASUBSRHB,LNKMBR=ASUBSRHB
//VTR003   EXEC ASMCLK,SRCMBR=ASUFSRHB,LNKMBR=ASUFSRHB
//VTR004   EXEC ASMCLK,SRCMBR=ASUHSRTB,LNKMBR=ASUHSRTB
//* ASSEMBLE MISC ROUTINES
//MSC001   EXEC ASMCLK,SRCMBR=ASUBSZAB,LNKMBR=ASUBSZAB
//MSC002   EXEC ASMCLK,SRCMBR=ASUMCOBB,LNKMBR=ASUMCOBB
//MSC003   EXEC ASMCLK,SRCMBR=ASUMCPPB,LNKMBR=ASUMCPPB
//MSC004   EXEC ASMCLK,SRCMBR=ASUMRTOB,LNKMBR=ASUMRTOB
//MSC005   EXEC ASMCLK,SRCMBR=ASU3BNDB,LNKMBR=ASU3BNDB
//MSC006   EXEC ASMCLK,SRCMBR=ASU3I01B,LNKMBR=ASU3I01B
//MSC007   EXEC ASMCLK,SRCMBR=ASU3LMAB,LNKMBR=ASU3LMAB
//MSC008   EXEC ASMCLK,SRCMBR=ASU3MODB,LNKMBR=ASU3MODB
//MSC009   EXEC ASMCLK,SRCMBR=ASU3PM1B,LNKMBR=ASU3PM1B
//MSC010   EXEC ASMCLK,SRCMBR=ASU3QEIB,LNKMBR=ASU3QEIB
//MSC011   EXEC ASMCLK,SRCMBR=ASU3QFAB,LNKMBR=ASU3QFAB
//MSC012   EXEC ASMCLK,SRCMBR=ASU3QOIB,LNKMBR=ASU3QOIB
//MSC013   EXEC ASMCLK,SRCMBR=ASU3RPOB,LNKMBR=ASU3RPOB
//MSC014   EXEC ASMCLK,SRCMBR=ASU3T01B,LNKMBR=ASU3T01B
//MSC015   EXEC ASMCLK,SRCMBR=ASU3T02B,LNKMBR=ASU3T02B
//MSC016   EXEC ASMCLK,SRCMBR=ASU3T03B,LNKMBR=ASU3T03B
//* ASSEMBLE PROGRAMS USED FOR IVP
//IVP001   EXEC ASMCLK,SRCMBR=ASTCCB1B,LNKMBR=ASTCCB1B
//IVP002   EXEC ASMCLK,SRCMBR=ASTDATAB,LNKMBR=ASTDATAB
//IVP003   EXEC ASMCLK,SRCMBR=ASTDOPEB,LNKMBR=ASTDOPEB
//IVP004   EXEC ASMCLK,SRCMBR=ASTQFA1B,LNKMBR=ASTQFA1B
//IVP005   EXEC ASMCLK,SRCMBR=ASTSRH1B,LNKMBR=ASTSRH1B
//*
//
./ ADD NAME=ASMSTR   0107-19325-23031-0835-00335-00282-00000-APLKS   49
//APLKS    JOB ,'A/L STRING PGMS',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID      ,RESTART=LNKAPND
//*            TYPRUN=SCAN
//*
//  EXPORT SYMLIST=CBT
//* SET VARIABLE NAMES
//  SET CBT=CB505996          CHANGE TO MATCH CBT RELEASE
//  SET SRCLIB=APLKS.ASUTIL.ASM
//  SET OBJLIB=APLKS.ASUTIL.OBJ2LIB
//  SET LNKLIB=APLKS.ASUTIL.LOADLIB
//  SET WORK=SYSDA
//*
//ASMBLR   PROC ASMPGM=ASMA90,
//             ASMPARM='DECK,NOOBJECT',
//             SRCLIB=&SRCLIB,
//             SRCMBR=,
//             OUTC=*,
//             WORK=SYSDA
//*        DECK - OUTPUT SYSPUNCH
//*        OBJECT - OUTPUT SYSLIN
//*
//ASM      EXEC PGM=&ASMPGM,PARM='&ASMPARM'
//SYSIN    DD  DISP=SHR,DSN=&SRCLIB(&SRCMBR) /*SOURCE INPUT*/
//SYSLIB   DD  DISP=SHR,DSN=&SRCLIB     /*COPYLIB/MACLIB INPUT*/
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=CEE.SCEEMAC
//         DD  DISP=SHR,DSN=CEE.SCEESAMP
//         DD  DISP=SHR,DSN=SYS1.SHASMAC
//*
//SYSPUNCH DD  DISP=SHR,DSN=&OBJLIB(&SRCMBR) /*OBJ DECK OUT*/
//SYSLIN   DD  DUMMY          /*OUTPUT FILE*/
//SYSADATA DD  DUMMY          /*ASSOCIATED DATA OUTPUT LRECL=1020*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT2   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT3   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//         PEND  END OF PROC ASMBLR
//*
//BINDER   PROC LNKPGM=IEWBLINK,
//             LNKPARM='MAP',
//             LNKLIB=&LNKLIB,
//             OUTC=*,
//             WORK=SYSDA
//*
//* DEFAULT    LNKPARM='CALL,LET,LIST,NOMAP,RES,NOREUS,NOXREF'
//*
//LNK      EXEC PGM=&LNKPGM,PARM='&LNKPARM'
//IEWPARMS DD  DUMMY          /*INPUT BINDER OPTS*/
//SYSLIN   DD  DUMMY          /*INPUT FILE*/
//OBJLIB   DD  DUMMY          /*INPUT INCLUDE FILE*/
//SYSLIB   DD  DUMMY          /*EXTERNAL REF INPUT*/
//*
//SYSLMOD  DD  DISP=SHR,DSN=&LNKLIB     /*CATALOG TO LIB*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//         PEND  END OF PROC BINDER
//*
//* DELETE OBJECT DATASET FOR ASSEMBLY OUTPUT
//STEP005  EXEC PGM=IEFBR14
//IFILE01  DD  DSN=&OBJLIB,
//             UNIT=&WORK,SPACE=(TRK,(1,1,1)),
//             DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3200),
//             DISP=(MOD,DELETE,DELETE)
//*
//*
//* ALLOCATE OBJECT DATASET FOR ASSEMBLY OUTPUT
//STEP010  EXEC PGM=IEFBR14
//OFILE01  DD  DSN=&OBJLIB,
//             UNIT=&WORK,SPACE=(CYL,(5,5,30)),
//             DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3200),
//             DISP=(NEW,CATLG,DELETE)
//*
//* ASSEMBLE ALL MODULES
//APND     EXEC ASMBLR,SRCMBR=ASUDAPND  STRING APPEND
//BMPOS    EXEC ASMBLR,SRCMBR=ASUDBPOS  STRING 1ST POS BOYER-MOORE
//CNTR     EXEC ASMBLR,SRCMBR=ASUDCNTR  STRING CENTER
//DEDT     EXEC ASMBLR,SRCMBR=ASUDDEDT  STRING DE-EDIT
//FPOS     EXEC ASMBLR,SRCMBR=ASUDFPOS  STRING 1ST POS
//HHEX     EXEC ASMBLR,SRCMBR=ASUDHHEX  STRING HORIZONTAL|DUMP HEX
//LEFT     EXEC ASMBLR,SRCMBR=ASUDLEFT  STRING LEFT JUSTIFY
//LPOS     EXEC ASMBLR,SRCMBR=ASUDLPOS  STRING LAST POS
//RGHT     EXEC ASMBLR,SRCMBR=ASUDRGHT  STRING RIGHT JUSTIFY
//SCNT     EXEC ASMBLR,SRCMBR=ASUDSCNT  STRING COUNT
//SINS     EXEC ASMBLR,SRCMBR=ASUDSINS  STRING INSERT
//SSUB     EXEC ASMBLR,SRCMBR=ASUDSSUB  STRING SUB-STRING
//STRP     EXEC ASMBLR,SRCMBR=ASUDSTRP  STRING STRIP
//VHEX     EXEC ASMBLR,SRCMBR=ASUDVHEX  STRING VERTICAL HEX
//* GROUP ORDER MATTERS (COMPILE ASUDSCNT 1ST)
//JSTF     EXEC ASMBLR,SRCMBR=ASUDJSTF  STRING JUSTIFY
//SPCE     EXEC ASMBLR,SRCMBR=ASUDSPCE  STRING SPACE
//WDEL     EXEC ASMBLR,SRCMBR=ASUDWDEL  STRING WORD DELETE
//WPOS     EXEC ASMBLR,SRCMBR=ASUDWPOS  STRING WORD POS
//* GROUP ORDER MATTERS (COMPILE ASUDBPOS 1ST)
//SDEL     EXEC ASMBLR,SRCMBR=ASUDSDEL  STRING DELETE
//SREP     EXEC ASMBLR,SRCMBR=ASUDSREP  STRING REPLACE
//SVAR     EXEC ASMBLR,SRCMBR=ASUDSVAR  STRING VARIABLE
//*
//* LNK/BIND OBJECT(S)
//LNKAPND  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDAPND)            STRING APPEND
    SETSSI &CBT
    NAME ASUDAPND(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKBPOS  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDBPOS)            STRING 1ST POS BOYER-MOORE
    SETSSI &CBT
    NAME ASUDBPOS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKCNTR  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDCNTR)            STRING CENTER
    SETSSI &CBT
    NAME ASUDCNTR(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKDEDT  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDDEDT)            STRING DE-EDIT
    SETSSI &CBT
    NAME ASUDDEDT(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKFPOS  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDFPOS)            STRING 1ST POS
    SETSSI &CBT
    NAME ASUDFPOS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKHHEX  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDHHEX)            STRING HORIZONTAL HEX
    SETSSI &CBT
    NAME ASUDHHEX(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKLEFT  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDLEFT)            STRING LEFT
    SETSSI &CBT
    NAME ASUDLEFT(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKLPOS  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDLPOS)            STRING LAST POS
    SETSSI &CBT
    NAME ASUDLPOS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKRGHT  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDRGHT)            STRING RIGHT JUSTIFY
    SETSSI &CBT
    NAME ASUDRGHT(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSCNT  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDSCNT)            STRING COUNT
    SETSSI &CBT
    NAME ASUDSCNT(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSINS  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDSINS)            STRING INSERT
    SETSSI &CBT
    NAME ASUDSINS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSSUB  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDSSUB)            STRING SUB-STRING
    SETSSI &CBT
    NAME ASUDSSUB(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSTRP  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDSTRP)            STRING STRIP
    SETSSI &CBT
    NAME ASUDSTRP(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKVHEX  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDVHEX)            STRING VERTICAL HEX
    SETSSI &CBT
    NAME ASUDVHEX(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKJSTF  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDJSTF)            STRING JUSTIFY
    SETSSI &CBT
    NAME ASUDJSTF(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSPCE  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDSPCE)            STRING SPACE
    SETSSI &CBT
    NAME ASUDSPCE(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKWDEL  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDWDEL)            STRING WORD DELETE
    SETSSI &CBT
    NAME ASUDWDEL(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKWPOS  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDWPOS)            STRING WORD POS
    SETSSI &CBT
    NAME ASUDWPOS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSDEL  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDSDEL)            STRING DELETE
    SETSSI &CBT
    NAME ASUDSDEL(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSREP  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDSREP)            STRING REPLACE
    SETSSI &CBT
    NAME ASUDSREP(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSVAR  EXEC BINDER
//LNK.SYSLIN DD  *,DCB=BLKSIZE=80,SYMBOLS=JCLONLY
    INCLUDE OBJLIB(ASUDSVAR)            STRING VARIABLE
    SETSSI &CBT
    NAME ASUDSVAR(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//
./ ADD NAME=ASTIVP01 0123-17243-22319-1443-00054-00016-00000-APLKS   05
//APLKST01 JOB ,'IVP JOB 1',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//*
//* Establish LOADLIB search path (place after JCLLIB card)
//JOBLIB   DD  DISP=SHR,DSN=APLKS.ASUTIL.LOADLIB
//*
//* test AS LE messages
//STEP020  EXEC PGM=ASTMSG1B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(ON),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* test assembler date/data wrangling macro's
//STEP030  EXEC PGM=ASTDATAB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* test chase control blocks
//STEP040  EXEC PGM=ASTCCB1B
//STEPLIB  DD  DISP=SHR,DSN=&LSHLQ..ASUTIL.LOADLIB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//
./ ADD NAME=ASTIVP02 0139-15071-23031-1026-00087-00014-00000-APLKS   29
//APLKST02 JOB ,'IVP JOB 2',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//*
//* Establish LOADLIB search path (place after JCLLIB card)
//JOBLIB   DD  DISP=SHR,DSN=&LSHLQ..ASUTIL.LOADLIB
//*
//* all actions against AS String routines
//STEP020  EXEC PGM=ASTSTR1B ,PARM=PACKAGE
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
005        APPEND
006        CENTER
007        COUNT
008        DE-EDIT
010        JUSTIFY
011        LEFT JUSTIFY
013        RIGHT JUSTIFY
014        SPACE
015        STRING DELETE "GOOD+MEM+" "NOW+IS+" "GOOD..." "GOOD+"
016        FIRST/NEXT POSITION
017        STRIP TRAILING/LEADING/BOTH
018        STRING INSERT
019        LAST/PREV POSITION
020        FIRST/NEXT POSITION BOYER-MOORE method
021        STRING REPLACE
022        SUB-STRING
023        VAR/SCAN
024        VERTICAL HEX
025        WORD DELETE
027        WORD POS
090        NBR TO TEXT ZD
091        NBR TO TEXT PD
092        NBR TO TEXT ED
093        NBR OF
END
/*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* all actions against AS String routines
//STEP030  EXEC PGM=ASTSTR1B,PARM=PACKAGE
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
005        APPEND
006        CENTER
007        COUNT
008        DE-EDIT
010        JUSTIFY
011        LEFT JUSTIFY
013        RIGHT JUSTIFY
014        SPACE
015        STRING DELETE "GOOD+MEM+" "NOW+IS+" "GOOD..." "GOOD+"
016        FIRST/NEXT POSITION
017        STRIP TRAILING/LEADING/BOTH
018        STRING INSERT
019        LAST/PREV POSITION
020        FIRST/NEXT POSITION BOYER-MOORE method
021        STRING REPLACE
022        SUB-STRING
023        VAR/SCAN
024        VERTICAL HEX
025        WORD DELETE
027        WORD POS
090        NBR TO TEXT ZD
091        NBR TO TEXT PD
092        NBR TO TEXT ED
093        NBR OF
END
/*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//
009        EDIT          (not written)
012        LEX           (not written)
024        VHEX
026        WORD FND      (not written)
028        HHEX
./ ADD NAME=ASTIVP03 0113-16012-21270-1110-00027-00035-00000-APLKS   04
//APLKST03 JOB ,'IVP JOB 3',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET FSHLQ=&SYSUID   /*FILE SET HLQ*/
//  SET LSHLQ=&SYSUID   /*LIBRARY SET HLQ*/
//  SET WORK=SYSDA
//*
//STEP010  EXEC PGM=IEFBR14
//OUTDD    DD  DSN=&FSHLQ..ASUP2DSB.SYSUT2,
//             UNIT=&WORK,SPACE=(TRK,(01),RLSE),
//             DCB=(LRECL=80,BLKSIZE=0,RECFM=FB),
//             DISP=(MOD,DELETE)
//*
//* COPY PARM STMT TO SYSUT2
//STEP020  EXEC PGM=ASUP2DSB,
//  PARM=('\','CARD1\','CARD2\','CARD3\','CARD4\','CARD5\',
//        'CARD6\','CARD7\','CARD8\','CARD9\','CARD10\','CARD11\')
//STEPLIB  DD  DISP=SHR,DSN=APLKS.ASUTIL.LOADLIB
//SYSUT2   DD  DSN=&FSHLQ..ASUP2DSB.SYSUT2,
//             UNIT=&WORK,SPACE=(TRK,(01),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//             DISP=(NEW,CATLG,DELETE)
//SYSPRINT DD  SYSOUT=*
//*
//
./ ADD NAME=ASTIVP04 0136-17095-22361-1103-00215-00020-00000-APLKS   47
//APLKST04 JOB ,'IVP JOB 4',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET FSHLQ=&SYSUID   /*FILE SET HLQ*/
//  SET LSHLQ=&SYSUID   /*LIBRARY SET HLQ*/
//  SET UNIQUE=AMSAP02
//  SET INPUT=PFIL.AMBCV.SAP02
//*
//* SET INPUT=CICSTS53.CICS.CICSP.DFHCSD     /*AM=VSAM,ORG=KSDS*/
//* SET INPUT=APLKS.IUDIR.AM            /*AM=QSAM,RECFM=FB,LRECL=80*/
//*
//  SET FSTATS=&FSHLQ..ASUBSZAB.&UNIQUE..SFSTATS
//  SET SRTOUT1=&FSHLQ..ASUBSZAB.&UNIQUE..ST1LRECL /*type=1*/
//  SET SRTOUT2=&FSHLQ..ASUBSZAB.&UNIQUE..ST2BLKS  /*type=2*/
//  SET SRTOUT3=&FSHLQ..ASUBSZAB.&UNIQUE..ST3FRAG  /*type=3*/
//*
//  SET XEQDSN=APLKS.BATCH.REXXLIB      /*REXX LIBRARY*/
//  SET WORK=SYSDA
//*
//* Establish LOADLIB search path (place after JCLLIB card)
//JOBLIB   DD  DISP=SHR,DSN=APLKS.ASUTIL.LOADLIB
//*
//* DELETE output file statistics
//STEP010  EXEC PGM=IEFBR14   DELETE TARGET DATASET(S)
//OUTDD1   DD  DSN=&FSTATS,
//             UNIT=&WORK,SPACE=(TRK,(1),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(MOD,DELETE,DELETE)
//*
//* test ASUBSZAB ASU3QFAA
//STEP020  EXEC PGM=ASUBSZAB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//* use RECFM=U when you want to read a QSAM file via block
//SYSUT1   DD  DISP=SHR,DSN=&INPUT,
//             DCB=(RECFM=U,LRECL=0,BLKSIZE=27920)
//SYSUT2   DD  DSN=&FSTATS,
//             UNIT=&WORK,SPACE=(CYL,(1,5),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(NEW,CATLG,DELETE)
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* Print output file of ASUBSZAB
//STEP030  EXEC PGM=ASTBSZ1B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSUT1   DD  DISP=SHR,DSN=&FSTATS
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* Print output file of ASUBSZAB type 1 records
//STEP031  EXEC PGM=ASTBSZ1B,PARM=T1
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSUT1   DD  DISP=SHR,DSN=&FSTATS
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* Print output file of ASUBSZAB type 2 records
//STEP032  EXEC PGM=ASTBSZ1B,PARM=T2
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSUT1   DD  DISP=SHR,DSN=&FSTATS
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* Print output file of ASUBSZAB type 3 records
//STEP033  EXEC PGM=ASTBSZ1B,PARM=T3
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSUT1   DD  DISP=SHR,DSN=&FSTATS
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* DELETE output sort data set(s)
//STEP110  EXEC PGM=IEFBR14
//SRTODD1  DD  DSN=&SRTOUT1,
//             UNIT=&WORK,SPACE=(TRK,(1),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(MOD,DELETE,DELETE)
//SRTODD2  DD  DSN=&SRTOUT2,
//             UNIT=&WORK,SPACE=(TRK,(1),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(MOD,DELETE,DELETE)
//SRTODD3  DD  DSN=&SRTOUT3,
//             UNIT=&WORK,SPACE=(TRK,(1),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(MOD,DELETE,DELETE)
//*
//* split input file statistics to 3 output and sort
//STEP120  EXEC PGM=ICETOOL
//TOOLIN   DD  *         ICETOOL CNTL STMT IN
    SORT FROM(INPDD1) TO(SRTODD1) USING(CRD1)
    SORT FROM(INPDD1) TO(SRTODD2) USING(CRD2)
    SORT FROM(INPDD1) TO(SRTODD3) USING(CRD3)
/*
//CRD1CNTL DD  *         SORT CONTROL STATEMENT PARMLIB
    SORT FIELDS=(13,04,BI,A)
    SUM FIELDS=(17,04,BI)
    INCLUDE COND=(01,01,CH,EQ,C'1')
    OPTION EQUALS
/*
//CRD2CNTL DD  *         SORT CONTROL STATEMENT PARMLIB
    SORT FIELDS=(13,04,BI,A)
    SUM FIELDS=(17,04,BI)
    INCLUDE COND=(01,01,CH,EQ,C'2')
    OPTION EQUALS
/*
//CRD3CNTL DD  *         SORT CONTROL STATEMENT PARMLIB
    SORT FIELDS=(13,04,FI,A)
    SUM FIELDS=(17,04,BI)
    INCLUDE COND=(01,01,CH,EQ,C'3')
    OPTION EQUALS
/*
//SORTDIAG DD  SYSOUT=*      SORT DIAGNOSTIC OUT
//SYSPRINT DD  SYSOUT=*
//TOOLMSG  DD  SYSOUT=*      ICETOOL MSG OUT
//DFSMSG   DD  SYSOUT=*      SORT MSG OUT
//LISTDD   DD  SYSOUT=*
//INPDD1   DD  DISP=SHR,DSN=&FSTATS
//SRTODD1  DD  DSN=&SRTOUT1,
//             UNIT=&WORK,SPACE=(CYL,(5,5),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(NEW,CATLG,DELETE)
//SRTODD2  DD  DSN=&SRTOUT2,
//             UNIT=&WORK,SPACE=(CYL,(5,5),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(NEW,CATLG,DELETE)
//SRTODD3  DD  DSN=&SRTOUT3,
//             UNIT=&WORK,SPACE=(CYL,(5,5),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(NEW,CATLG,DELETE)
//*
//* Write out batch REXX command for TSO
//STEP130  EXEC PGM=ASUP2DSB,
// PARM=('\','%RECLANAL &SRTOUT1\')
//SYSUT2   DD  DSN=&&BCTLCRD,
//             UNIT=&WORK,SPACE=(4000,(1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000),
//             DISP=(,PASS)
//SYSOUT   DD  SYSOUT=*
//*
//* Invoke TSO batch environment
//STEP131  EXEC PGM=IKJEFT01,DYNAMNBR=20
//* PGM=IKJEFT1A | PGM=IKJEFT1B better return codes
//* ,PARM='cmd100' | ,PARMDD=
//SYSTSIN  DD  DISP=(OLD,DELETE),DSN=&&BCTLCRD    TSO COMMANDS
//SYSEXEC  DD  DISP=SHR,DSN=&XEQDSN               REXX LIBRARY
//         DD  DISP=SHR,DSN=ISP.SISPEXEC
//         DD  DISP=SHR,DSN=SYSMGT.BCSP.REXX.LIB
//SYSPROC  DD  DISP=SHR,DSN=SYSMGT.TSO.CMDPROC    CLIST LIBRARY
//         DD  DISP=SHR,DSN=ISP.SISPCLIB
//SYSTSPRT DD  SYSOUT=*           TERMINAL OUTPUT
//*
//* Write out batch REXX command for TSO
//STEP140  EXEC PGM=ASUP2DSB,
// PARM=('\','%BKSZANAL &SRTOUT2\')
//SYSUT2   DD  DSN=&&BCTLCRD,
//             UNIT=&WORK,SPACE=(4000,(1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000),
//             DISP=(,PASS)
//SYSOUT   DD  SYSOUT=*
//*
//* Invoke TSO batch environment
//STEP141  EXEC PGM=IKJEFT01,DYNAMNBR=20
//* PGM=IKJEFT1A | PGM=IKJEFT1B better return codes
//* ,PARM='cmd100' | ,PARMDD=
//SYSTSIN  DD  DISP=(OLD,DELETE),DSN=&&BCTLCRD    TSO COMMANDS
//SYSEXEC  DD  DISP=SHR,DSN=&XEQDSN               REXX LIBRARY
//         DD  DISP=SHR,DSN=ISP.SISPEXEC
//         DD  DISP=SHR,DSN=SYSMGT.BCSP.REXX.LIB
//SYSPROC  DD  DISP=SHR,DSN=SYSMGT.TSO.CMDPROC    CLIST LIBRARY
//         DD  DISP=SHR,DSN=ISP.SISPCLIB
//SYSTSPRT DD  SYSOUT=*           TERMINAL OUTPUT
//*
//* Write out batch REXX command for TSO
//STEP150  EXEC PGM=ASUP2DSB,
// PARM=('\','%FRAGANAL &SRTOUT3\')
//SYSUT2   DD  DSN=&&BCTLCRD,
//             UNIT=&WORK,SPACE=(4000,(1),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000),
//             DISP=(,PASS)
//SYSOUT   DD  SYSOUT=*
//*
//* Invoke TSO batch environment
//STEP151  EXEC PGM=IKJEFT01,DYNAMNBR=20
//* PGM=IKJEFT1A | PGM=IKJEFT1B better return codes
//* ,PARM='cmd100' | ,PARMDD=
//SYSTSIN  DD  DISP=(OLD,DELETE),DSN=&&BCTLCRD    TSO COMMANDS
//SYSEXEC  DD  DISP=SHR,DSN=&XEQDSN               REXX LIBRARY
//         DD  DISP=SHR,DSN=ISP.SISPEXEC
//         DD  DISP=SHR,DSN=SYSMGT.BCSP.REXX.LIB
//SYSPROC  DD  DISP=SHR,DSN=SYSMGT.TSO.CMDPROC    CLIST LIBRARY
//         DD  DISP=SHR,DSN=ISP.SISPCLIB
//SYSTSPRT DD  SYSOUT=*           TERMINAL OUTPUT
//*
//
./ ADD NAME=ASTIVP05 0108-17340-21270-1110-00029-00044-00000-APLKS   51
//APLKST05 JOB ,'IVP JOB 5',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET FSHLQ=&SYSUID   /*FILE SET HLQ*/
//* SET INPUT=NULLFILE
//  SET INPUT=QFIL.SABCS.SAXTR.S41S
//* SET INPUT=QFIL.TSBCV.TSLOGT.MERGED  /*AM=VSAM,ORG=ESDS*/
//* SET INPUT=QFIL.SAOLV.SAP01     /*AM=VSAM,ORG=KSDS*/
//* SET INPUT=QFIL.SAOLV.SAREP     /*AM=VSAM,ORG=KSDS*/
//*
//* Establish LOADLIB search path (place after JCLLIB card)
//JOBLIB   DD  DISP=SHR,DSN=APLKS.ASUTIL.LOADLIB
//*
//* test ASTQFA1B ASU3QFAA    query file attributes
//STEP010  EXEC PGM=ASTQFA1B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=&INPUT
//*            DCB=(RECFM=U)
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//
./ ADD NAME=ASTIVP06 0119-19245-23031-1148-00038-00031-00000-APLKS   23
//APLKST06 JOB ,'IVP JOB 6',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//*
//* ESTABLISH LOADLIB SEARCH PATH (PLACE AFTER JCLLIB CARD)
//JOBLIB   DD  DISP=SHR,DSN=&LSHLQ..ASUTIL.LOADLIB
//*
//* ALL ACTIONS AGAINST LE CALLABLE SERVICES
//STEP010  EXEC PGM=ASTSVC1B,PARM='HIHOWAREYOU'
//CEEOPTS  DD  *
  ALL31(ON),STACK(,,ANY),TERMTHDACT(UADUMP),ENVAR('TZ=CST6CDT')
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* ALL ACTIONS AGAINST LE C/C++ FUNCTION CALLABLE SERVICES
//STEP020  EXEC PGM=ASTSVC2B
//CEEOPTS  DD  *
  ALL31(ON),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
  CARD 1
   CARD 2
    CARD 3
/*
//SEQ1     DD  DISP=SHR,DSN=APLKS.ASUTIL.CNTL($$LIB)
//PDS1     DD  DISP=SHR,DSN=APLKS.ASUTIL.CNTL
//VSAM1    DD  DISP=SHR,DSN=DFIL.ALLTEL.GN212.CNTLFILE
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//
./ ADD NAME=ASTIVP07 0111-18173-23031-1159-00040-00019-00000-APLKS   24
//APLKST07 JOB ,'IVP JOB 7',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//*
//* ESTABLISH LOADLIB SEARCH PATH (PLACE AFTER JCLLIB CARD)
//JOBLIB   DD  DISP=SHR,DSN=&LSHLQ..ASUTIL.LOADLIB
//*
//* TEST HEAPSORT AND BINARY SEARCH ROUTINES
//STEP010  EXEC PGM=ASTSRT1B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST HEAPSORT AND BINARY SEARCH ROUTINES
//STEP020  EXEC PGM=ASTSRT2B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST ASM HEAPSORT AND SEARCH ROUTINES
//STEP030  EXEC PGM=ASTSRH1B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//
./ ADD NAME=ASTIVP08 0109-18362-23031-1207-00023-00028-00000-APLKS   13
//APLKST08 JOB ,'IVP JOB 8',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//  SET DEBUG=&SYSUID..EQALANGX
//*
//* ESTABLISH LOADLIB SEARCH PATH (PLACE AFTER JCLLIB CARD)
//JOBLIB   DD  DISP=SHR,DSN=&LSHLQ..ASUTIL.LOADLIB
//*
//* TEST DOPE VECTOR GENERATION AND USE
//STEP010  EXEC PGM=ASTDOPEB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDILANGX DD  DISP=SHR,DSN=&DEBUG
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//
./ ADD NAME=ASTIVP09 0134-19092-23031-1222-00601-00020-00000-APLKS   06
//APLKST09 JOB ,'IVP JOB 9',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID ,RESTART=STEP020 ,TYPRUN=SCAN
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//  SET LOADLIB=&LSHLQ..ASUTIL.LOADLIB
//*
//STEP020  EXEC PGM=SSLEANAL,
//  PARM='/RPTOPTS'
//* PARM='/RPTOPTS,S(NOOPT,  SSR,  TEST,  NC,  PC)'
//* PARM='/RPTOPTS,S( TEST, CMPR2,TRUNC(OPT),NOOPT)'
//* PARM='/RPTVERB'
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//APPLLIB  DD  DISP=SHR,DSN=&LOADLIB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//* MBRLIST  DD  *
/*
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//PRTOUTA  DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//STEP030  EXEC PGM=SSLEANAL,
//* PARM='/RPTOPTS'
//* PARM='/RPTOPTS,S(NOOPT,  SSR,  TEST,  NC,  PC)'
//* PARM='/RPTOPTS,S( TEST, CMPR2,TRUNC(OPT),NOOPT)'
//  PARM='/RPTVERB'
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//APPLLIB  DD  DISP=SHR,DSN=&LOADLIB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//* MBRLIST  DD  *
/*
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//PRTOUTA  DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* LOAD MODULE ANALYSIS
//STEP040  EXEC PGM=ASU3LMAB
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//SYSLIB   DD  DISP=SHR,DSN=&LOADLIB
//         DD  DISP=SHR,DSN=CEE.SCEERUN
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//MBRLIST  DD  *
*   PROGRAMS IN APLKS.ASUTIL.LOADLIB (PDS/E) LIBRARY
    ASTDATEB        COBOL PROGRAM
    ASTMSG1B        COBOL PROGRAM
    ASTSRT1B        COBOL PROGRAM
    ASTSRT2B        COBOL PROGRAM
    ASTSTR1B        COBOL PROGRAM
    ASTSVC1B        COBOL PROGRAM
    ASTSVC2B        COBOL PROGRAM
    ASTCH2HH        HLASM TR/TABLE
    ASTLPIDB        HLASM DATA/TABLE
    ASUBSRHB        HLASM SUBR
    ASUBSZAB        HLASM PROGRAM
    ASU3BNDB        HLASM PROGRAM
    SSLEANAL        HLASM PROGRAM
*   PROGRAM IN CEE.SCEERUN (PDS)
*   CEU$AAAR        C/C++ FASTLINK
    IBMPXSF         PL/I  STANDARD
    IGZXLPKE        COBOL V4.2 STANDARD
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST ASU3BNDB             QUERY BINDER INFORMATION
//STEP050  EXEC PGM=ASU3BNDB,
//  PARM='BOPT,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print options in hex
//*            |_ knowledge
//* PARM='HIST,11111110'
//*            ||||||||_ n/a
//*            |||||||_ sort items
//*            ||||||_ include IBM modules
//*            |||||_ include CUI (compile unit info)
//*            ||||_ include IDRB (binder id)
//*            |||_ include IDRZ (AMASPZAP id)
//*            ||_ include IDRU (user id)
//*            |_ include IDRL (lang processor id)
//* PARM='MAP,11110100'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ include IBM modules
//*           |||||_ include text Class(es) only
//*           ||||_ include level 4 (i.e. L,X)
//*           |||_ include level 3 (i.e. S,P)
//*           ||_ include level 2 (i.e. C)
//*           |_ include level 1 (i.e. M,E)
//* PARM='ESD,01000000'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ n/a
//*           |||||_ n/a
//*           ||||_ n/a
//*           |||_ n/a
//*           ||_ include SD & ED
//*           |_ include all
//* PARM='MODI,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print detail
//*            |_ knowledge
//* PARM='DUMP,00000000'
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//SYSLIB   DD  DISP=SHR,DSN=&LOADLIB
//         DD  DISP=SHR,DSN=CEE.SCEERUN
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
*   PROGRAMS IN APLKS.ASUTIL.LOADLIB (PDS/E) LIBRARY
    ASTDATEB
    ASTMSG1B
    ASTSRT1B
    ASTSRT2B
    ASTSTR1B
    ASTSVC1B
    ASTSVC2B
    ASTCH2HH
    ASTLPIDB
    ASUBSRHB
    ASUBSZAB
    ASU3BNDB
    SSLEANAL
*   PROGRAM IN CEE.SCEERUN (PDS)
    CEU$AAAR
    IBMPXSF
    IGZXLPKE
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST ASU3BNDB             QUERY BINDER INFORMATION
//STEP060  EXEC PGM=ASU3BNDB,
//* PARM='BOPT,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print options in hex
//*            |_ knowledge
//  PARM='HIST,11111110'
//*            ||||||||_ n/a
//*            |||||||_ sort items
//*            ||||||_ include IBM modules
//*            |||||_ include CUI (compile unit info)
//*            ||||_ include IDRB (binder id)
//*            |||_ include IDRZ (AMASPZAP id)
//*            ||_ include IDRU (user id)
//*            |_ include IDRL (lang processor id)
//* PARM='MAP,11110100'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ include IBM modules
//*           |||||_ include text Class(es) only
//*           ||||_ include level 4 (i.e. L,X)
//*           |||_ include level 3 (i.e. S,P)
//*           ||_ include level 2 (i.e. C)
//*           |_ include level 1 (i.e. M,E)
//* PARM='ESD,01000000'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ n/a
//*           |||||_ n/a
//*           ||||_ n/a
//*           |||_ n/a
//*           ||_ include SD & ED
//*           |_ include all
//* PARM='MODI,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print detail
//*            |_ knowledge
//* PARM='DUMP,00000000'
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//SYSLIB   DD  DISP=SHR,DSN=&LOADLIB
//         DD  DISP=SHR,DSN=CEE.SCEERUN
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
*   PROGRAMS IN APLKS.ASUTIL.LOADLIB (PDS/E) LIBRARY
    ASTDATEB
    ASTMSG1B
    ASTSRT1B
    ASTSRT2B
    ASTSTR1B
    ASTSVC1B
    ASTSVC2B
    ASTCH2HH
    ASTLPIDB
    ASUBSRHB
    ASUBSZAB
    ASU3BNDB
    SSLEANAL
*   PROGRAM IN CEE.SCEERUN (PDS)
    CEU$AAAR
    IBMPXSF
    IGZXLPKE
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST ASU3BNDB             QUERY BINDER INFORMATION
//STEP070  EXEC PGM=ASU3BNDB,
//* PARM='BOPT,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print options in hex
//*            |_ knowledge
//* PARM='HIST,11111110'
//*            ||||||||_ n/a
//*            |||||||_ sort items
//*            ||||||_ include IBM modules
//*            |||||_ include CUI (compile unit info)
//*            ||||_ include IDRB (binder id)
//*            |||_ include IDRZ (AMASPZAP id)
//*            ||_ include IDRU (user id)
//*            |_ include IDRL (lang processor id)
//  PARM='MAP,11110100'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ include IBM modules
//*           |||||_ include text Class(es) only
//*           ||||_ include level 4 (i.e. L,X)
//*           |||_ include level 3 (i.e. S,P)
//*           ||_ include level 2 (i.e. C)
//*           |_ include level 1 (i.e. M,E)
//* PARM='ESD,01000000'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ n/a
//*           |||||_ n/a
//*           ||||_ n/a
//*           |||_ n/a
//*           ||_ include SD & ED
//*           |_ include all
//* PARM='MODI,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print detail
//*            |_ knowledge
//* PARM='DUMP,00000000'
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//SYSLIB   DD  DISP=SHR,DSN=&LOADLIB
//         DD  DISP=SHR,DSN=CEE.SCEERUN
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
*   PROGRAMS IN APLKS.ASUTIL.LOADLIB (PDS/E) LIBRARY
    ASTDATEB
    ASTMSG1B
    ASTSRT1B
    ASTSRT2B
    ASTSTR1B
    ASTSVC1B
    ASTSVC2B
    ASTCH2HH
    ASTLPIDB
    ASUBSRHB
    ASUBSZAB
    ASU3BNDB
    SSLEANAL
*   PROGRAM IN CEE.SCEERUN (PDS)
    CEU$AAAR
    IBMPXSF
    IGZXLPKE
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST ASU3BNDB             QUERY BINDER INFORMATION
//STEP080  EXEC PGM=ASU3BNDB,
//* PARM='BOPT,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print options in hex
//*            |_ knowledge
//* PARM='HIST,11111110'
//*            ||||||||_ n/a
//*            |||||||_ sort items
//*            ||||||_ include IBM modules
//*            |||||_ include CUI (compile unit info)
//*            ||||_ include IDRB (binder id)
//*            |||_ include IDRZ (AMASPZAP id)
//*            ||_ include IDRU (user id)
//*            |_ include IDRL (lang processor id)
//* PARM='MAP,11110100'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ include IBM modules
//*           |||||_ include text Class(es) only
//*           ||||_ include level 4 (i.e. L,X)
//*           |||_ include level 3 (i.e. S,P)
//*           ||_ include level 2 (i.e. C)
//*           |_ include level 1 (i.e. M,E)
//  PARM='ESD,01000000'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ n/a
//*           |||||_ n/a
//*           ||||_ n/a
//*           |||_ n/a
//*           ||_ include SD & ED
//*           |_ include all
//* PARM='MODI,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print detail
//*            |_ knowledge
//* PARM='DUMP,00000000'
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//SYSLIB   DD  DISP=SHR,DSN=&LOADLIB
//         DD  DISP=SHR,DSN=CEE.SCEERUN
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
*   PROGRAMS IN APLKS.ASUTIL.LOADLIB (PDS/E) LIBRARY
    ASTDATEB
    ASTMSG1B
    ASTSRT1B
    ASTSRT2B
    ASTSTR1B
    ASTSVC1B
    ASTSVC2B
    ASTCH2HH
    ASTLPIDB
    ASUBSRHB
    ASUBSZAB
    ASU3BNDB
    SSLEANAL
*   PROGRAM IN CEE.SCEERUN (PDS)
    CEU$AAAR
    IBMPXSF
    IGZXLPKE
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST ASU3BNDB             QUERY BINDER INFORMATION
//STEP090  EXEC PGM=ASU3BNDB,
//* PARM='BOPT,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print options in hex
//*            |_ knowledge
//* PARM='HIST,11111110'
//*            ||||||||_ n/a
//*            |||||||_ sort items
//*            ||||||_ include IBM modules
//*            |||||_ include CUI (compile unit info)
//*            ||||_ include IDRB (binder id)
//*            |||_ include IDRZ (AMASPZAP id)
//*            ||_ include IDRU (user id)
//*            |_ include IDRL (lang processor id)
//* PARM='MAP,11110100'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ include IBM modules
//*           |||||_ include text Class(es) only
//*           ||||_ include level 4 (i.e. L,X)
//*           |||_ include level 3 (i.e. S,P)
//*           ||_ include level 2 (i.e. C)
//*           |_ include level 1 (i.e. M,E)
//* PARM='ESD,01000000'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ n/a
//*           |||||_ n/a
//*           ||||_ n/a
//*           |||_ n/a
//*           ||_ include SD & ED
//*           |_ include all
//  PARM='MODI,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print detail
//*            |_ knowledge
//* PARM='DUMP,00000000'
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//SYSLIB   DD  DISP=SHR,DSN=&LOADLIB
//         DD  DISP=SHR,DSN=PLIB.ALLTEL.CICSLOAD
//         DD  DISP=SHR,DSN=PLIB.ALLTEL.BATLOAD
//         DD  DISP=SHR,DSN=PLIB.BANCORP.CICSLOAD
//         DD  DISP=SHR,DSN=PLIB.BANCORP.BATLOAD
//         DD  DISP=SHR,DSN=CEE.SCEERUN
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
*   PROGRAMS IN APLKS.ASUTIL.LOADLIB (PDS/E) LIBRARY
    ASTDATEB
    ASTMSG1B
    ASTSRT1B
    ASTSRT2B
    ASTSTR1B
    ASTSVC1B
    ASTSVC2B
    ASTCH2HH
    ASTLPIDB
    ASUBSRHB
    ASUBSZAB
    ASU3BNDB
    SSLEANAL
*   PROGRAM IN CEE.SCEERUN (PDS)
    CEU$AAAR
    IBMPXSF
    IGZXLPKE
*   PROGRAM IN PLIB.ALLTEL.BATLOAD (PDS/E) LIBRARY
    AMPBCV01
    IMACHNSF
    IM31EPEX
*   SAAPI121
    SARDATEB
*   SARPII
*   SARPIP
    SARPT01B
    SAR1DMIB
    SIACHTS
    SIBINSRH
    SIDCHI
*   PROGRAM IN PLIB.ALLTEL.CICSLOAD (PDS/E) LIBRARY
    AINQEN
    AMPBCV01
    AMCRALOC
    FIDCHI
    SARDATEB
    TSTSIPC1
*   PROGRAM IN PLIB.BANCORP.BATLOAD (PDS/E) LIBRARY
    CEEUOPT
    COBMSTUB
    FIXOPR20
    FIXTRK20
*   PROGRAM IN PLIB.BANCORP.CICSLOAD (PDS/E) LIBRARY
    A16M400
    COBMAP
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST ASU3BNDB             QUERY BINDER INFORMATION
//STEP100  EXEC PGM=ASU3BNDB,
//* PARM='BOPT,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print options in hex
//*            |_ knowledge
//* PARM='HIST,11111110'
//*            ||||||||_ n/a
//*            |||||||_ sort items
//*            ||||||_ include IBM modules
//*            |||||_ include CUI (compile unit info)
//*            ||||_ include IDRB (binder id)
//*            |||_ include IDRZ (AMASPZAP id)
//*            ||_ include IDRU (user id)
//*            |_ include IDRL (lang processor id)
//* PARM='MAP,11110100'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ include IBM modules
//*           |||||_ include text Class(es) only
//*           ||||_ include level 4 (i.e. L,X)
//*           |||_ include level 3 (i.e. S,P)
//*           ||_ include level 2 (i.e. C)
//*           |_ include level 1 (i.e. M,E)
//* PARM='ESD,01000000'
//*           ||||||||_ n/a
//*           |||||||_ n/a
//*           ||||||_ n/a
//*           |||||_ n/a
//*           ||||_ n/a
//*           |||_ n/a
//*           ||_ include SD & ED
//*           |_ include all
//* PARM='MODI,11000000'
//*            ||||||||_ n/a
//*            |||||||_ n/a
//*            ||||||_ n/a
//*            |||||_ n/a
//*            ||||_ n/a
//*            |||_ n/a
//*            ||_ print detail
//*            |_ knowledge
//  PARM='DUMP,00000000'
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//SYSLIB   DD  DISP=SHR,DSN=&LOADLIB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
* module.. csect... class...........
  ASU3RPOB *        B_TEXT
/*
//*
//CAOESTOP DD  DUMMY          TURN OFF SYMDUMP
//IDIOFF   DD  DUMMY          TURN OFF FAULT ANALYZER
//*
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//
./ ADD NAME=COBALL   0105-21302-23031-1048-00228-00101-00000-APLKS   26
//APLKS    JOB ,'C/L BATCH PGM',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=200M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET VARIABLE NAMES
//  SET SRCLIB=&SYSUID..ASUTIL.COBOL
//  SET LNKLIB=&SYSUID..ASUTIL.LOADLIB
//  SET WORK=SYSDA
//*
//COBCLK   PROC COBPGM=IGYCRCTL,
//             COBPARM='OPTFILE',
//             SRCMBR=,
//             LNKPGM=IEWBLINK,
//             LNKPARM='MAP,REUS(RENT)',
//             LNKMBR=,
//             OUTC=*,
//             WORK=&WORK
//*
//COB      EXEC PGM=&COBPGM,PARM='&COBPARM'
//STEPLIB  DD  DISP=SHR,DSN=IGY.V6R2.SIGYCOMP
//SYSOPTF  DD  DUMMY          /*COMPILER OPTIONS LRECL=80*/
//SYSIN    DD  DISP=SHR,DSN=&SRCLIB(&SRCMBR) /*SOURCE INPUT*/
//SYSLIB   DD  DISP=SHR,DSN=&SRCLIB     /*COPYLIB INPUT LRECL=80*/
//         DD  DISP=SHR,DSN=CEE.SCEESAMP
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT2   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT3   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT4   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT5   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT6   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT7   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT8   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT9   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT10  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT11  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT12  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT13  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT14  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT15  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//*
//SYSLIN   DD  DSN=&&LOADSET, /*OUTPUT FILE LRECL=80*/
//             UNIT=&WORK,SPACE=(TRK,(5,5)),
//             DISP=(,PASS)
//SYSMDECK DD  DSN=&&SYSMDECK,     /*EXPANDED SOURCE OUTPUT LRECL=80*/
//             UNIT=&WORK,SPACE=(TRK,(5,5)),
//             DCB=(RECFM=FB,BLKSIZE=0,LRECL=80),
//             DISP=(,DELETE)
//SYSADATA DD  DSN=&&SYSADATA,     /*ASSOC DATA OUTPUT LRECL=1020*/
//             UNIT=&WORK,SPACE=(TRK,(5,5)),
//             DCB=(RECFM=VB,BLKSIZE=0,LRECL=1020),
//             DISP=(,DELETE)
//*
//SYSPRINT DD  SYSOUT=&OUTC   /*LRECL=133*/
//*
//LNK      EXEC PGM=&LNKPGM,PARM='&LNKPARM'
//IEWPARMS DD  DUMMY           /*INPUT BINDER OPTS*/
//OBJLIB   DD  DUMMY           /*INPUT INCLUDE FILE*/
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=&&LOADSET    /*INPUT FILE*/
//SYSLIB   DD  DISP=SHR,DSN=CEE.SCEELKED     /*EXTERNAL REF INPUT*/
//         DD  DISP=SHR,DSN=&LNKLIB
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//*
//SYSLMOD  DD  DISP=SHR,DSNAME=&LNKLIB(&LNKMBR)   /*CATALOG TO LIB*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//*
//         PEND  END OF PROC COBCLK
//*
//* COMPILE DATE ROUTINES
//DTE001   EXEC COBCLK,SRCMBR=DTEB2G,LNKMBR=DTEB2G
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//DTE002   EXEC COBCLK,SRCMBR=DTEDOW1,LNKMBR=DTEDOW1
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//DTE003   EXEC COBCLK,SRCMBR=DTEDOW2,LNKMBR=DTEDOW2
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//DTE004   EXEC COBCLK,SRCMBR=DTEG2B,LNKMBR=DTEG2B
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//DTE005   EXEC COBCLK,SRCMBR=DTEG2J,LNKMBR=DTEG2J
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//DTE006   EXEC COBCLK,SRCMBR=DTEG2W,LNKMBR=DTEG2W
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//DTE007   EXEC COBCLK,SRCMBR=DTEJ2G,LNKMBR=DTEJ2G
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//DTE008   EXEC COBCLK,SRCMBR=DTEW2G,LNKMBR=DTEW2G
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//*
//* COMPILE VECTOR PROCESSING ROUTINES
//VTR001   EXEC COBCLK,SRCMBR=VBINSRCH,LNKMBR=VBINSRCH
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//VTR002   EXEC COBCLK,SRCMBR=VBINSRH1,LNKMBR=VBINSRH1
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//VTR003   EXEC COBCLK,SRCMBR=VHEAPSRT,LNKMBR=VHEAPSRT
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//*
//* COMPILE MISC ROUTINES
//MSC001   EXEC COBCLK,SRCMBR=ASUDNOFB,LNKMBR=ASUDNOFB
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//MSC002   EXEC COBCLK,SRCMBR=ASUDN2TB,LNKMBR=ASUDN2TB
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//MSC003   EXEC COBCLK,SRCMBR=ASUMDHEX,LNKMBR=ASUMDHEX
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//MSC004   EXEC COBCLK,SRCMBR=ASUMETXT,LNKMBR=ASUMETXT
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//MSC005   EXEC COBCLK,SRCMBR=ASUMVHEX,LNKMBR=ASUMVHEX
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//MSC006   EXEC COBCLK,SRCMBR=ASUP2DSB,LNKMBR=ASUP2DSB
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//*
//* COMPILE PROGRAMS USED FOR IVP
//IVP001   EXEC COBCLK,SRCMBR=ASTBSZ1B,LNKMBR=ASTBSZ1B
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//IVP002   EXEC COBCLK,SRCMBR=ASTDATEB,LNKMBR=ASTDATEB
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//IVP003   EXEC COBCLK,SRCMBR=ASTMSG1B,LNKMBR=ASTMSG1B
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//IVP004   EXEC COBCLK,SRCMBR=ASTSRT1B,LNKMBR=ASTSRT1B
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//IVP005   EXEC COBCLK,SRCMBR=ASTSRT2B,LNKMBR=ASTSRT2B
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//IVP006   EXEC COBCLK,SRCMBR=ASTSTR1B,LNKMBR=ASTSTR1B
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//IVP007   EXEC COBCLK,SRCMBR=ASTSVC1B,LNKMBR=ASTSVC1B
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//IVP008   EXEC COBCLK,SRCMBR=ASTSVC2B,LNKMBR=ASTSVC2B
//COB.SYSOPTF  DD  *          /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//
./ ADD NAME=COBBCL   0138-14132-23031-1132-00102-00020-00000-APLKS   51
//APLKS    JOB ,'C/L BATCH PGM',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=200M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* CHANGE '%mbr' 'XXXXXXXX' ALL
//* SET VARIABLE NAMES
//  SET SRCMBR=%mbr
//  SET SRCLIB=&SYSUID..ASUTIL.COBOL
//  SET SRCDSN=&SRCLIB(&SRCMBR)
//  SET LNKLIB=&SYSUID..ASUTIL.LOADLIB
//  SET LNKMBR=&SRCMBR
//  SET WORK=SYSDA
//*
//COBOL    PROC COBPGM=IGYCRCTL,
//             COBPARM=,
//             OUTC=*,
//             WORK=SYSDA
//*
//COB      EXEC PGM=&COBPGM,PARM='&COBPARM'
//STEPLIB  DD  DISP=SHR,DSN=IGY.V6R2.SIGYCOMP
//SYSOPTF  DD  DUMMY          /*COMPILER OPTIONS LRECL=80*/
//SYSIN    DD  DUMMY          /*SOURCE INPUT LRECL=80*/
//SYSPRINT DD  SYSOUT=&OUTC   /*LRECL=133*/
//SYSLIB   DD  DUMMY          /*COPYLIB INPUT LRECL=80*/
//SYSLIN   DD  DUMMY          /*OUTPUT FILE LRECL=80*/
//SYSMDECK DD  DUMMY          /*EXPANDED SOURCE OUTPUT LRECL=80*/
//SYSADATA DD  DUMMY          /*ASSOCIATED DATA OUTPUT LRECL=1020*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT2   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT3   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT4   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT5   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT6   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT7   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT8   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT9   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT10  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT11  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT12  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT13  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT14  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT15  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//         PEND  END OF PROC COBOL
//*
//BINDER   PROC LNKPGM=IEWBLINK,
//             LNKPARM='MAP,REUS(RENT)',
//             LNKLIB=,
//             LNKMBR=,
//             OUTC=*,
//             WORK=SYSDA
//*
//* DEFAULT    LNKPARM='CALL,LET,LIST,NOMAP,RES,NOREUS,NOXREF'
//*
//LNK      EXEC PGM=&LNKPGM,PARM='&LNKPARM'
//IEWPARMS DD  DUMMY           /*INPUT BINDER OPTS*/
//OBJLIB   DD  DUMMY           /*INPUT INCLUDE FILE*/
//SYSLIN   DD  DUMMY           /*INPUT FILE*/
//SYSPRINT DD  SYSOUT=&OUTC
//SYSLIB   DD  DUMMY           /*EXTERNAL REF INPUT*/
//SYSLMOD  DD  DISP=SHR,DSNAME=&LNKLIB(&LNKMBR)   /*CATALOG TO LIB*/
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//         PEND  END OF PROC BINDER
//*
//* RUN COBOL COMPILER TO CREATE OBJECT
//STEP040  EXEC COBOL,
//             COBPARM='OPTFILE'
//COB.SYSOPTF  DD  *                         /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  ARCH(11),NOC(E),NODYN,LIST,MAP,NAME,NUMPROC(PFD),NOOFFSET
  OPT(2),TRUNC(OPT),XREF(SHORT)
/*
//COB.SYSIN    DD  *     /*PROCESS STMTS*/
/*
//             DD  DISP=SHR,DSN=&SRCDSN      /*SOURCE INPUT*/
//COB.SYSLIB   DD  DISP=SHR,DSN=&SRCLIB      /*COPYLIB INPUT*/
//             DD  DISP=SHR,DSN=CEE.SCEESAMP
//COB.SYSLIN   DD  DSN=&&LOADSET,            /*OUTPUT FILE*/
//             UNIT=&WORK,SPACE=(TRK,(5,5)),
//             DISP=(,PASS)
//COB.SYSMDECK DD  DSN=&&SYSMDECK,      /*EXPANDED SOURCE OUTPUT*/
//             UNIT=&WORK,SPACE=(TRK,(5,5)),
//             DCB=(RECFM=FB,BLKSIZE=0,LRECL=80),
//             DISP=(,PASS)
//COB.SYSADATA DD  DSN=&&SYSADATA,      /*ASSOCIATED DATA OUTPUT*/
//             UNIT=&WORK,SPACE=(TRK,(5,5)),
//             DCB=(RECFM=VB,BLKSIZE=0,LRECL=1020),
//             DISP=(,PASS)
//*
//  IF (STEP040.COB.RC LT 8) THEN
//* LNK/BIND OBJECT(S)
//STEP060  EXEC BINDER,
//             LNKLIB=&LNKLIB,
//             LNKMBR=&LNKMBR
//LNK.IEWPARMS DD  DUMMY
//LNK.OBJLIB DD  DUMMY        /*INPUT INCLUDE FILE*/
//LNK.SYSLIN DD  DISP=(OLD,PASS),DSN=&&LOADSET
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//  ENDIF /*end of IF for STEP060*/
//
./ ADD NAME=SSLEANAL 0109-18065-22320-0858-00034-00038-00000-APLKS   56
//APLKS    JOB ,'BATCH JOB',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET CTLLIB=&SYSUID..WORK.DATALIB
//  SET CTLDSN=&CTLLIB(SSLEANAL)
//  SET LSHLQ=RLIB       LIBRARY SET HLQ
//  SET LSMLQ=ALLTEL     LIBRARY SET MLQ ALLTEL/BANCORP
//  SET LSLLQ=CICSLOAD   LIBRARY SET LLQ BATLOAD/CICSLOAD
//  SET LSLIB=&LSHLQ..&LSMLQ..&LSLLQ
//  SET DOUT=*           DUMP OUTPUT CLASS
//  SET OUT=*            USE FOR PRTOUT? PRINT CLASS
//  SET SOUT=*           SIMESS OUTPUT CLASS
//*
//STEP010  EXEC PGM=SSLEANAL,
//* PARM='/RPTOPTS'
//  PARM='/RPTOPTS,S(NOOPT,  SSR,  TEST,  NC,  PC)'
//* PARM='/RPTOPTS,S( TEST, CMPR2,TRUNC(OPT),NOOPT)'
//* PARM='/RPTVERB'
//STEPLIB  DD  DISP=SHR,DSN=&LSLIB
//         DD  DISP=SHR,DSN=APLKS.BXS.UTIL.LOADLIB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF DD DUMMY      TURN OFF FAULT ANALYZER
//* MBRLIST  DD  DISP=SHR,DSN=&CTLDSN
/*
//APPLLIB  DD  DISP=SHR,DSN=&LSLIB
//*
//SYSPRINT DD  SYSOUT=&OUT
//PRTOUTA  DD  SYSOUT=&OUT
//SYSUDUMP DD  SYSOUT=&DOUT
//
